@using JeuDeDame.Client.Data 
@code {
    List<Checker> blackCheckers = new List<Checker>();
    List<Checker> whiteCheckers = new List<Checker>();

    protected override void OnInitialized()
    {
        for (int i = 0; i < 3; i++)
        {
            for (int j = (i + 1) % 2; j < 8; j += 2)
            {
                blackCheckers.Add(new Checker
                {
                    Color = "black",
                    Column = j,
                    Row = i,
                    Direction = CheckerDirection.Down
                });
            }
        }

        for (int i = 5; i < 8; i++)
        {
            for (int j = (i + 1) % 2; j < 8; j += 2)
            {
                blackCheckers.Add(new Checker
                {
                    Color = "white",
                    Column = j,
                    Row = i,
                    Direction = CheckerDirection.Down
                });
            }
        }
    }

    Checker activeChecker = null;
}

@for (int i = 0; i < 8; i++)
{
<div class="row">
    @for (int j = 0; j < 8; j++)
    {
        var checker = blackCheckers.FirstOrDefault(n => n.Column == j && n.Row == i);
        if (checker == null)
        {
            checker = whiteCheckers.FirstOrDefault(n => n.Column == j && n.Row == i);
        }
        <div class="cell">
            @if (checker != null)
            {
                <div @onclick="() => { activeChecker = checker; }" 
                     class="checker @checker.Color @(checker == activeChecker ? "active" : "")"></div>
            }
        </div>
    }
</div>
} 